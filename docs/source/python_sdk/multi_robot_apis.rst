.. _multi_robot_apis:

###############################
RoboMaster SDK 多机api汇总
###############################

目前多机支持的api的使用大部分都与单机相同，因此本文档主要对多机目前支持的api做一个汇总。本文档单独介绍了多机中与单机用法不同的接口，
其余api的具体参数类型、取值范围以及返回值等详细介绍参考单机部分。

多机api汇总
***************

EP 机器人部分
_______________

+---------+--------------------------------------------+
| module  |   api                                      |
+---------+--------------------------------------------+
| chassis | drive_wheels(w1, w2, w3, w4, timeout)      |
|         +--------------------------------------------+
|         | drive_speed(x, y, z, timeout)              |
|         +--------------------------------------------+
|         | move(x, y, z, xy_speed, z_speed)           |
+---------+--------------------------------------------+
| gimbal  | recenter(pitch_speed, yaw_speed)           |
|         +--------------------------------------------+
|         | suspend()                                  |
|         +--------------------------------------------+
|         | resume()                                   |
|         +--------------------------------------------+
|         | move(pitch, yaw, pitch_speed, yaw_speed)   |
|         +--------------------------------------------+
|         | moveto(pitch, yaw, pitch_speed, yaw_speed) |
+---------+--------------------------------------------+
| blaser  | fire(fire_type, times)                     |
|         +--------------------------------------------+
|         | set_led(brightness, effect)                |
+---------+--------------------------------------------+
| led     | set_led(comp, r, g, b, effect, freq)       |
+---------+--------------------------------------------+



教育机器人部分
________________

+---------+------------------------------------------------------+
| module  |   api                                                |
+---------+------------------------------------------------------+
| flight  | takeoff()                                            |
|         +------------------------------------------------------+
|         | land()                                               |
|         +------------------------------------------------------+
|         | up(distance)                                         |
|         +------------------------------------------------------+
|         | down(distance)                                       |
|         +------------------------------------------------------+
|         | forward(distance)                                    |
|         +------------------------------------------------------+
|         | backword(distance)                                   |
|         +------------------------------------------------------+
|         | left(distance)                                       |
|         +------------------------------------------------------+
|         | right(distance)                                      |
|         +------------------------------------------------------+
|         | rotate(angle)                                        |
|         +------------------------------------------------------+
|         | flip_forward()                                       |
|         +------------------------------------------------------+
|         | flip_backward()                                      |
|         +------------------------------------------------------+
|         | flip_left()                                          |
|         +------------------------------------------------------+
|         | flip_right()                                         |
|         +------------------------------------------------------+
|         | mission_pad_on()                                     |
|         +------------------------------------------------------+
|         | mission_pad_off()                                    |
|         +------------------------------------------------------+
|         | go(distance)                                         |
+---------+------------------------------------------------------+
|         | set_led(r, g, b)                                     |
|         +------------------------------------------------------+
| led     | set_led_blink(speed, r1, g1, b1, r2, g2, b2)         |
|         +------------------------------------------------------+
|         | set_bright(speed, r, g, b)                           |
|         +------------------------------------------------------+
|         | set_mled_graph(graph_str)                            |
|         +------------------------------------------------------+
|         | set_mled_char(color, display_char)                   |
|         +------------------------------------------------------+
|         | set_mled_scroll(direction, color, speed, display_str)|
|         +------------------------------------------------------+
|         | set_mled_bright(bright)                              |
|         +------------------------------------------------------+
|         | set_mled_boot(matrix_str)                            |
+---------+------------------------------------------------------+
| battery | get_battery()                                        |
+---------+------------------------------------------------------+

以下两个接口在多机中的使用与单机不同：

1. `flight` 模块的 `go()` 指令::

    go(go_dict)

    参数： go_dict: {[robot_id1: x1, y1, z1, speed1, mid1], [robot_id1: x1, y1, z1, speed1, mid1], ... }
          其中 robot_id 是飞机的编号， x y z 分别对应单机 go 指令的坐标 x y z， speed 对应单机 go 指令的移动速度 speed，mid 对应单机 go 指令的挑战卡号码 mid

    返回值： multi_action 对象


2. `battery` 模块的 `get_battery()` 指令::

    get_battery()

    参数： 无

    返回值：{robot_id1: battery_info1, robot_id2: battery_info2, ... }
           返回值为储存所有飞机的电池电量信息的字典，字典的键为飞机的编号id，字典的值为与之对应的电池电量信息

